<?xml version="1.0" ?>
<robot name="mbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="M_PI" value="3.1415926" />

  <xacro:property name="wheel_joint_x" value="0" />
  <xacro:property name="wheel_joint_y" value="0.19" />
  <xacro:property name="wheel_joint_z" value="0.05" />

  <xacro:property name="wheel_mass"   value="0.2" /> 
  <xacro:property name="wheel_length" value="0.06" />
  <xacro:property name="wheel_radius" value="0.06" />

  <xacro:property name="caster_joint_x" value="0.18" />
  <xacro:property name="caster_joint_y" value="0" />
  <xacro:property name="caster_joint_z" value="0.095" />  

  <xacro:property name="caster_mass"   value="0.1" /> 
  <xacro:property name="caster_radius" value="0.015" />

  <xacro:property name="base_mass"   value="1" /> 
  <xacro:property name="base_length" value="0.16" />
  <xacro:property name="base_radius" value="0.2" />

  <xacro:property name="stage_mass"   value="0.5" /> 
  <xacro:property name="stage_length" value="0.12" />
  <xacro:property name="stage_radius" value="0.1" />

  <xacro:property name="camera_joint_x" value="0.17" />
  <xacro:property name="camera_joint_y" value="0" />
  <xacro:property name="camera_joint_z" value="0.1" />  

  <xacro:property name="kinect_joint_x" value="0.15" />
  <xacro:property name="kinect_joint_y" value="0" />
  <xacro:property name="kinect_joint_z" value="0.11" />  

  <xacro:property name="laser_joint_x" value="0" />
  <xacro:property name="laser_joint_y" value="0" />
  <xacro:property name="laser_joint_z" value="0.085" />  

  <material name="white">
    <color rgba="1 1 1 0.9"/>
  </material>
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>

  <xacro:macro name="cylinder_inertial_matrix" params="m r h">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
      </inertial>
  </xacro:macro>

  <!-- Macro for inertia matrix -->
  <xacro:macro name="sphere_inertial_matrix" params="m r">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
              iyy="${2*m*r*r/5}" iyz="0" 
              izz="${2*m*r*r/5}" />
      </inertial>
  </xacro:macro>

  <xacro:macro name="base_stage">
    <link name="base_footprint">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>  
    <gazebo reference="base_footprint">
        <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <joint name="base_link_joint" type="fixed">
        <origin xyz="0 0 ${base_length/2 + caster_radius*2}" rpy="0 0 0" />        
        <parent link="base_footprint"/>
        <child link="base_link" />
    </joint>

    <link name="base_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${base_length}" radius="${base_radius}"/>
        </geometry>
        <material name="red" />
      </visual>
      <collision>
          <origin xyz=" 0 0 0" rpy="0 0 0" />
          <geometry>
              <cylinder length="${base_length}" radius="${base_radius}"/>
          </geometry>
      </collision>  
      <xacro:cylinder_inertial_matrix  m="${base_mass}" r="${base_radius}" h="${base_length}" />
    </link>

    <gazebo reference="base_link">
        <material>Gazebo/Red</material>
    </gazebo>

    <joint name="stage_joint" type="fixed">
      <origin xyz="0 0 ${(base_length + stage_length)/2}" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="stage_link" />    
    </joint>

    <link name="stage_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${stage_length}" radius="${stage_radius}"/>
        </geometry>
        <material name="red" />
      </visual>
      <collision>
          <origin xyz=" 0 0 0" rpy="0 0 0" />
          <geometry>
              <cylinder length="${stage_length}" radius="${stage_radius}"/>
          </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix  m="${stage_mass}" r="${stage_radius}" h="${stage_length}" />
    </link>

    <gazebo reference="stage_link">
        <material>Gazebo/Red</material>
    </gazebo>

  </xacro:macro>


  <xacro:macro name="wheel" params="prefix reflect">
    <joint name="${prefix}_wheel_joint" type="continuous">
      <origin xyz="${wheel_joint_x} ${reflect*wheel_joint_y} ${-wheel_joint_z}" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="${prefix}_wheel_link" />
      <axis xyz="0 1 0" />
    </joint>

    <link name="${prefix}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0"/>
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
        </geometry>
        <material name="white" />
      </visual>
      <collision>
          <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
          <geometry>
              <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
          </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />      
    </link>

    <gazebo reference="${prefix}_wheel_link">
        <material>Gazebo/White</material>
    </gazebo>

    <!-- Transmission is important to link the joints and the controller -->
    <transmission name="${prefix}_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${prefix}_wheel_joint" >
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="${prefix}_wheel_joint_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

  </xacro:macro>

  <xacro:macro name="caster" params="prefix reflect">
    <joint name="${prefix}_caster_joint" type="continuous">
      <origin xyz="${reflect*caster_joint_x} ${caster_joint_y} ${-caster_joint_z}" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_caster_link" />
      <axis xyz="0 1 0" />
    </joint>

    <link name="${prefix}_caster_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <sphere radius="${caster_radius}" />
        </geometry>
        <material name="white" />
      </visual>
      <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
              <sphere radius="${caster_radius}" />
          </geometry>
      </collision>      
      <xacro:sphere_inertial_matrix  m="${caster_mass}" r="${caster_radius}" />      
    </link>

    <gazebo reference="${prefix}_caster_link">
        <material>Gazebo/White</material>
    </gazebo>

  </xacro:macro>

  <xacro:macro name="robot_base">
    <xacro:base_stage />  

    <xacro:wheel prefix="left"  reflect="1"/>  
    <xacro:wheel prefix="right"  reflect="-1"/>  

    <xacro:caster prefix="front"  reflect="1"/>  
    <xacro:caster prefix="back"  reflect="-1"/>  

    <!-- controller -->
    <gazebo>
        <plugin name="differential_drive_controller" 
                filename="libgazebo_ros_diff_drive.so">
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>true</publishWheelTF>
            <robotNamespace>/</robotNamespace>
            <publishTf>1</publishTf>
            <publishWheelJointState>true</publishWheelJointState>
            <alwaysOn>true</alwaysOn>
            <updateRate>100.0</updateRate>
            <legacyMode>true</legacyMode>
            <leftJoint>left_wheel_joint</leftJoint>
            <rightJoint>right_wheel_joint</rightJoint>
            <wheelSeparation>${wheel_joint_y*2}</wheelSeparation>
            <wheelDiameter>${2*wheel_radius}</wheelDiameter>
            <broadcastTF>1</broadcastTF>
            <wheelTorque>30</wheelTorque>
            <wheelAcceleration>1.8</wheelAcceleration>
            <commandTopic>cmd_vel</commandTopic>
            <odometryFrame>odom</odometryFrame> 
            <odometryTopic>odom</odometryTopic> 
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>
    </gazebo> 
  </xacro:macro>

  <xacro:robot_base />  

  <xacro:include filename="$(find robot_hunt_maze)/urdf/sensor/camera.xacro" />
  <xacro:usb_camera joint_x="${camera_joint_x}" joint_y="${camera_joint_y}" joint_z="${camera_joint_z}"/>  

  <xacro:include filename="$(find robot_hunt_maze)/urdf/sensor/laser.xacro" />
  <xacro:laser joint_x="${laser_joint_x}" joint_y="${laser_joint_y}" joint_z="${laser_joint_z}"/>  

</robot>
